name: Build

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.19.0'
          cache: 'yarn'
          
      - name: Show environment info
        run: |
          node -v
          yarn -v
          echo "Current directory:"
          pwd
          echo "Directory contents:"
          dir
          
      - name: Install dependencies
        run: |
          echo "Installing dependencies..."
          rm -f yarn.lock
          yarn install --verbose 2>&1 | tee yarn-install.log
          if ($LASTEXITCODE -ne 0) {
            echo "Yarn install failed. Log:"
            type yarn-install.log
            exit 1
          }
        
      - name: Build TypeScript
        run: |
          echo "Building TypeScript..."
          yarn build:ts 2>&1 | tee typescript-build.log
          if ($LASTEXITCODE -ne 0) {
            echo "TypeScript build failed. Log:"
            type typescript-build.log
            exit 1
          }
        
      - name: Build Renderer
        run: |
          echo "Building renderer..."
          yarn build:renderer 2>&1 | tee renderer-build.log
          if ($LASTEXITCODE -ne 0) {
            echo "Renderer build failed. Log:"
            type renderer-build.log
            exit 1
          }
        
      - name: Copy Assets
        run: |
          echo "Copying assets..."
          yarn copy-assets 2>&1 | tee copy-assets.log
          if ($LASTEXITCODE -ne 0) {
            echo "Copy assets failed. Log:"
            type copy-assets.log
            exit 1
          }
        
      - name: Build Windows
        run: |
          echo "Building Windows package..."
          yarn electron-builder --win --x64 2>&1 | tee electron-builder.log
          if ($LASTEXITCODE -ne 0) {
            echo "Electron builder failed. Log:"
            type electron-builder.log
            exit 1
          }
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: windows-logs
          path: |
            *.log
            
      - name: Upload build artifacts
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: build/*.exe

  build-mac:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel distutils
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.19.0'
          cache: 'yarn'
          
      - name: Show environment info
        run: |
          node -v
          yarn -v
          echo "Current directory:"
          pwd
          ls -la
          
      - name: Install global dependencies
        run: |
          npm install -g typescript
          npm install -g electron-builder
          npm install -g esbuild
          
      - name: Install dependencies
        run: |
          echo "Installing dependencies..."
          rm -f yarn.lock
          # 确保安装 devDependencies
          yarn install --verbose --production=false 2>&1 | tee yarn-install.log
          # 单独安装 fs-extra
          yarn add fs-extra --dev
          if [ $? -ne 0 ]; then
            echo "Yarn install failed. Log:"
            cat yarn-install.log
            exit 1
          fi
        
      - name: Build TypeScript
        run: |
          echo "Building TypeScript..."
          yarn build:ts 2>&1 | tee typescript-build.log
          if [ $? -ne 0 ]; then
            echo "TypeScript build failed. Log:"
            cat typescript-build.log
            exit 1
          fi
        
      - name: Build Renderer
        run: |
          echo "Building renderer..."
          yarn build:renderer 2>&1 | tee renderer-build.log
          if [ $? -ne 0 ]; then
            echo "Renderer build failed. Log:"
            cat renderer-build.log
            exit 1
          fi
        
      - name: Copy Assets
        run: |
          echo "Copying assets..."
          yarn copy-assets 2>&1 | tee copy-assets.log
          if [ $? -ne 0 ]; then
            echo "Copy assets failed. Log:"
            cat copy-assets.log
            exit 1
          fi
        
      - name: Build Mac
        run: |
          echo "Building Mac package..."
          mkdir -p build/entitlements
          echo '<?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
            <dict>
              <key>com.apple.security.cs.allow-jit</key>
              <true/>
              <key>com.apple.security.cs.allow-unsigned-executable-memory</key>
              <true/>
            </dict>
          </plist>' > build/entitlements.mac.plist
          
          yarn electron-builder --mac 2>&1 | tee electron-builder.log
          if [ $? -ne 0 ]; then
            echo "Electron builder failed. Log:"
            cat electron-builder.log
            exit 1
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CSC_IDENTITY_AUTO_DISCOVERY: false
          
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: mac-logs
          path: |
            *.log
            
      - name: Upload build artifacts
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: mac-build
          path: build/*.dmg

      - name: List build directory
        if: always()
        run: |
          echo "Build directory contents:"
          ls -la build/