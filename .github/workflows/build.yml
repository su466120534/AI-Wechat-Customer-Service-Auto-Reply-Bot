name: Build

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.19.0'
          cache: 'yarn'
          
      - name: Cache electron
        uses: actions/cache@v4
        with:
          path: ~/.cache/electron
          key: ${{ runner.os }}-electron-cache-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-electron-cache-

      - name: Cache electron-builder
        uses: actions/cache@v4
        with:
          path: ~/.cache/electron-builder
          key: ${{ runner.os }}-electron-builder-cache-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-electron-builder-cache-

      - name: Install dependencies
        run: |
          yarn install --frozen-lockfile
          yarn rebuild-native
        
      - name: Build
        run: yarn build
        env:
          NODE_ENV: production
        
      - name: Build Windows
        run: yarn electron-builder --win --x64
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_ENV: production
          
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: build/*.exe
          
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: build/*.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-mac:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.19.0'
          cache: 'yarn'
          
      - name: Cache electron
        uses: actions/cache@v4
        with:
          path: ~/Library/Caches/electron
          key: ${{ runner.os }}-electron-cache-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-electron-cache-

      - name: Cache electron-builder
        uses: actions/cache@v4
        with:
          path: ~/Library/Caches/electron-builder
          key: ${{ runner.os }}-electron-builder-cache-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-electron-builder-cache-

      - name: Install dependencies
        run: |
          yarn install --frozen-lockfile
          yarn rebuild-native
        
      - name: Build
        run: yarn build
        env:
          NODE_ENV: production
        
      - name: Build Mac
        run: yarn electron-builder --mac
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_ENV: production
          
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: mac-build
          path: build/*.dmg
          
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: build/*.dmg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}